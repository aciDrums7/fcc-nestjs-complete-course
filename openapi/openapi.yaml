openapi: 3.0.0
paths:
  /api/v1:
    get:
      operationId: getHello
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags:
        - app
  /api/v1/songs:
    post:
      operationId: createSong
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSongDto'
      responses:
        '201':
          description: ''
      tags:
        - songs
    get:
      operationId: findAllSongs
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - songs
  /api/v1/songs/{id}:
    get:
      operationId: findSongById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags:
        - songs
    put:
      operationId: updateSongById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSongDto'
      responses:
        '200':
          description: ''
      tags:
        - songs
    delete:
      operationId: deleteSongById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags:
        - songs
  /api/v1/artists:
    post:
      operationId: createArtist
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArtistDto'
      responses:
        '201':
          description: ''
      tags:
        - artists
    get:
      operationId: findAllArtists
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - artists
  /api/v1/artists/{id}:
    get:
      operationId: findArtistById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags:
        - artists
    patch:
      operationId: updateArtistById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateArtistDto'
      responses:
        '200':
          description: ''
      tags:
        - artists
    delete:
      operationId: deleteArtistById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags:
        - artists
info:
  title: Spotify Clone API - Postgres - PrismaORM
  description: freeCodeCamp - NestJS Complete Course API
  version: '1.0'
  contact: {}
tags: []
servers:
  - url: http://localhost:3000
components:
  schemas:
    CreateSongDto:
      type: object
      properties:
        title:
          type: string
        releaseDate:
          type: string
        duration:
          type: string
        lyrics:
          type: string
        artistId:
          type: number
          minimum: 1
      required:
        - title
        - releaseDate
        - duration
    UpdateSongDto:
      type: object
      properties:
        title:
          type: string
        releaseDate:
          type: string
        duration:
          type: string
        lyrics:
          type: string
        artistId:
          type: number
          minimum: 1
    CreateArtistDto:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    UpdateArtistDto:
      type: object
      properties:
        name:
          type: string
